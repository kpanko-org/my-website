name: "Build and Deploy"
on:
  push:
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "site"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true

      - name: Build site
        run: bundle exec jekyll build --destination _site
        env:
          JEKYLL_ENV: "production"

      - name: Upload site artifact
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: _site

      - name: Test site
        run: |
          bundle exec htmlproofer _site \
            \-\-disable-external \
            \-\-ignore-urls "/^http:\/\/127.0.0.1/,/^http:\/\/0.0.0.0/,/^http:\/\/localhost/"

  deploy:
    environment: staging
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: site
          path: _site

      - name: Show current directory
        run: ls -laR

      - name: Backup existing site before deployment
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: ${{ vars.REMOTE_PATH }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no \
            $REMOTE_USER@$REMOTE_HOST \
            "REMOTE_PATH=\$HOME/${REMOTE_PATH}; \
            BACKUP_PATH=\$HOME/backups/\$(date +'%Y%m%d%H%M%S'); \
            mkdir -p \"\$BACKUP_PATH\"; \
            if [ -d \"\$REMOTE_PATH\" ]; then \
              cp -r \"\$REMOTE_PATH\" \"\$BACKUP_PATH\"; \
              echo \"Backup created at \$BACKUP_PATH\"; \
            else \
              echo \"Error: REMOTE_PATH '\$REMOTE_PATH' does not exist.\"; \
              exit 1; \
            fi"
          rm -f private_key

      - name: rsync to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: ${{ vars.REMOTE_PATH }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
          rsync -avz --delete \
            -e "ssh -i private_key -o StrictHostKeyChecking=no" \
            _site/ $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH
          rm -f private_key
